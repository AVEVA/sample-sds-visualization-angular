trigger:
  batch: true
  branches:
    include:
      - master

pr:
  branches:
    include:
      - master

schedules:
  - cron: '0 0 * * 0'
    displayName: Weekly build
    branches:
      include:
        - master
    always: true

resources:
  repositories:
    - repository: templates
      type: github
      name: osisoft/OSI-Samples
      endpoint: osisoft/OSI-Samples

variables:
  - template: '/miscellaneous/build_templates/variables.yml@templates'
  - name: projPath
    value: '/'
  - name: analysisProject
    value: SDS_Viz_Angular

jobs:
  - job: Tests
    pool:
      vmImage: windows-latest
    steps:
      # # Issue in windows-latest template, see:
      # # https://developercommunity.visualstudio.com/content/problem/1170486/selenium-ui-test-can-no-longer-find-chrome-binary.html
      # - script: |
      #     if not exist "C:\Program Files (x86)\Google" mkdir "C:\Program Files (x86)\Google"
      #     if not exist "C:\Program Files (x86)\Google\Chrome" mkdir "C:\Program Files (x86)\Google\Chrome"
      #     mklink /D "C:\Program Files (x86)\Google\Chrome\Application" "C:\Program Files\Google\Chrome\Application"
      #   displayName: Set Chrome Path
      #   condition: eq(variables['imageName'],'windows-latest')

      - bash: npm ci
        workingDirectory: $(Build.SourcesDirectory)$(projPath)
        displayName: 'Install dependencies'

      # # Currently same version on Windows & Ubuntu, preserving separate
      # # conditionals in case these images go out of sync in the future
      # - bash: npx webdriver-manager update --versions.chrome 87.0.4280.88
      #   workingDirectory: $(Build.SourcesDirectory)$(projPath)
      #   displayName: 'Ubuntu: Update webdriver-manager'
      #   condition: eq(variables['imageName'],'ubuntu-latest')

      # - bash: npx webdriver-manager update --versions.chrome 87.0.4280.88
      #   workingDirectory: $(Build.SourcesDirectory)$(projPath)
      #   displayName: 'Update webdriver-manager'
      #   condition: eq(variables['imageName'],'windows-latest')

      - script: npm run test -- --watch=false
        workingDirectory: $(Build.SourcesDirectory)$(projPath)/
        displayName: 'Run tests'

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: JUnit
          testResultsFiles: '*.xml'
          failTaskOnFailedTests: true
          searchFolder: '$(Build.SourcesDirectory)$(projPath)/TestResults'
          testRunTitle: '$(Agent.JobName) on $(imageName)'
        displayName: 'Publish test results'
        condition: always()

  - template: '/miscellaneous/build_templates/analysis.yml@templates'
    parameters:
      language: angular
